<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AipSdk</name>
    </assembly>
    <members>
        <member name="T:Baidu.Aip.AipException">
            <summary>
                百度AI异常类
            </summary>
        </member>
        <member name="T:Baidu.Aip.AipHttpRequest">
            <summary>
                Http请求包装
            </summary>
        </member>
        <member name="F:Baidu.Aip.AipHttpRequest.Uri">
            <summary>
                不带query
            </summary>
        </member>
        <member name="M:Baidu.Aip.AipHttpRequest.GenerateDevWebRequest(System.String)">
            <summary>
                生成AI的Web请求
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.AipHttpRequest.GenerateCloudRequest(System.String,System.String)">
            <summary>
                生成云的Web请求
            </summary>
            <param name="ak"></param>
            <param name="sk"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.AipHttpRequest.GenerateSpeechRequest">
            <summary>
                生成语音的Web请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.AipServiceBase.Report(System.Collections.Generic.IEnumerable{System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>
            反馈接口
            用于用户反馈模型的效果，用户必须至少反馈一个 true/false 来表示对该结果是否满意，同时可选择反馈详细的评价。
            http://ai.baidu.com/docs#/ImageCensoring-API/top
            </summary>
            <param name="data">
            demo: 具体参考文档
               {
                   "api_url": "https://aip.baidubce.com/rest/2.0/antiporn/v1/detect",
                   "image_logid": 123456,
                   "level": 1,
                   "correct": 1
               }
            </param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Auth.OpenApiFetchToken(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
                获取OpenApi的Token
            </summary>
            <param name="ak"></param>
            <param name="sk"></param>
            <param name="throws">是否是否throw</param>
            <param name="debugLog"></param>
            <returns>成功返回token, 失败返回null</returns>
        </member>
        <member name="M:Baidu.Aip.Auth.CanonicalRequest(Baidu.Aip.AipHttpRequest)">
            <summary>
                签名 host 和 Content-Type
            </summary>
            <param name="aipHttpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Auth.Hex(System.Byte[])">
            <summary>
                16进制表示
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Utils.StreamToString(System.IO.Stream,System.Text.Encoding)">
            <summary>
                read stream to string. Will close the steam !
            </summary>
            <param name="ss"></param>
            <param name="enc"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Utils.ParseQueryString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                query dictionary to string
            </summary>
            <param name="querys"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Utils.UriEncode(System.String,System.Boolean)">
            <summary>
                UriEncode
            </summary>
            <param name="input"></param>
            <param name="encodeSlash"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Utils.Md5(System.String)">
            <summary>
                MD5
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Utils.StreamToBytes(System.IO.Stream)">
            <summary>
                Stream to bytes
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Utils.UnixTimestamp">
            <summary>
                Timestamp
            </summary>
            <returns>timestamp in milliseconds</returns>
        </member>
        <member name="T:Baidu.Aip.Face.Face">
            <summary>
            人脸识别
            </summary>
        </member>
        <member name="M:Baidu.Aip.Face.Face.Detect(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             人脸检测接口
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>max_face_num</c>: 最多处理人脸数目，默认值1 </item>
                       <item>  <c>face_fields</c>: 包括age,beauty,expression,faceshape,gender,glasses,landmark,race,qualities信息，逗号分隔，默认只返回人脸框、概率和旋转角度 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Face.Face.Match(System.Collections.Generic.IEnumerable{System.Byte[]},System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <member name="M:Baidu.Aip.Face.Face.Identify(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             人脸识别接口
             </summary>
             <param name="groupId">用户组id，标识一组用户（由数字、字母、下划线组成），长度限制128B。如果需要将一个uid注册到多个group下，group\_id需要用多个逗号分隔，每个group_id长度限制为48个英文字符。**注：group无需单独创建，注册用户时则会自动创建group。**<br/>**产品建议**：根据您的业务需求，可以将需要注册的用户，按照业务划分，分配到不同的group下，例如按照会员手机尾号作为groupid，用于刷脸支付、会员计费消费等，这样可以尽可能控制每个group下的用户数与人脸数，提升检索的准确率</param>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>ext_fields</c>: 特殊返回信息，多个用逗号分隔，取值固定: 目前支持faceliveness(活体检测)。**注：需要用于判断活体的图片，图片中的人脸像素面积需要不小于100px\*100px，人脸长宽与图片长宽比例，不小于1/3** </item>
                       <item>  <c>user_top_num</c>: 返回用户top数，默认为1，最多返回5个 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Face.Face.Verify(System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             人脸认证接口
             </summary>
             <param name="uid">用户id（由数字、字母、下划线组成），长度限制128B</param>
             <param name="groupId">用户组id，标识一组用户（由数字、字母、下划线组成），长度限制128B。如果需要将一个uid注册到多个group下，group\_id需要用多个逗号分隔，每个group_id长度限制为48个英文字符。**注：group无需单独创建，注册用户时则会自动创建group。**<br/>**产品建议**：根据您的业务需求，可以将需要注册的用户，按照业务划分，分配到不同的group下，例如按照会员手机尾号作为groupid，用于刷脸支付、会员计费消费等，这样可以尽可能控制每个group下的用户数与人脸数，提升检索的准确率</param>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>top_num</c>: 返回用户top数，默认为1 </item>
                       <item>  <c>ext_fields</c>: 特殊返回信息，多个用逗号分隔，取值固定: 目前支持faceliveness(活体检测)。**注：需要用于判断活体的图片，图片中的人脸像素面积需要不小于100px\*100px，人脸长宽与图片长宽比例，不小于1/3** </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Face.Face.UserAdd(System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <member name="M:Baidu.Aip.Face.Face.UserUpdate(System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             人脸更新接口
             </summary>
             <param name="uid">用户id（由数字、字母、下划线组成），长度限制128B</param>
             <param name="userInfo">用户资料，长度限制256B</param>
             <param name="groupId">更新指定groupid下uid对应的信息</param>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>action_type</c>: 目前仅支持replace，uid不存在时，不报错，会自动变为注册操作；未选择该参数时，如果uid不存在会提示错误 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Face.Face.UserDelete(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             人脸删除接口
             </summary>
             <param name="uid">用户id（由数字、字母、下划线组成），长度限制128B</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>group_id</c>: 删除指定groupid下uid对应的信息 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Face.Face.UserGet(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             用户信息查询接口
             </summary>
             <param name="uid">用户id（由数字、字母、下划线组成），长度限制128B</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>group_id</c>: 选择指定group_id则只查找group列表下的uid内容，如果不指定则查找所有group下对应uid的信息 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Face.Face.GroupGetlist(System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             组列表查询接口
             </summary>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>start</c>: 默认值0，起始序号 </item>
                       <item>  <c>end</c>: 返回数量，默认值100，最大值1000 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Face.Face.GroupGetusers(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             组内用户列表查询接口
             </summary>
             <param name="groupId">用户组id（由数字、字母、下划线组成），长度限制128B</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>start</c>: 默认值0，起始序号 </item>
                       <item>  <c>end</c>: 返回数量，默认值100，最大值1000 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Face.Face.GroupAdduser(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             组间复制用户接口
             </summary>
             <param name="srcGroupId">从指定group里复制信息</param>
             <param name="groupId">用户组id，标识一组用户（由数字、字母、下划线组成），长度限制128B。如果需要将一个uid注册到多个group下，group\_id需要用多个逗号分隔，每个group_id长度限制为48个英文字符。**注：group无需单独创建，注册用户时则会自动创建group。**<br/>**产品建议**：根据您的业务需求，可以将需要注册的用户，按照业务划分，分配到不同的group下，例如按照会员手机尾号作为groupid，用于刷脸支付、会员计费消费等，这样可以尽可能控制每个group下的用户数与人脸数，提升检索的准确率</param>
             <param name="uid">用户id（由数字、字母、下划线组成），长度限制128B</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Face.Face.GroupDeleteuser(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             组内删除用户接口
             </summary>
             <param name="groupId">用户组id，标识一组用户（由数字、字母、下划线组成），长度限制128B。如果需要将一个uid注册到多个group下，group\_id需要用多个逗号分隔，每个group_id长度限制为48个英文字符。**注：group无需单独创建，注册用户时则会自动创建group。**<br/>**产品建议**：根据您的业务需求，可以将需要注册的用户，按照业务划分，分配到不同的group下，例如按照会员手机尾号作为groupid，用于刷脸支付、会员计费消费等，这样可以尽可能控制每个group下的用户数与人脸数，提升检索的准确率</param>
             <param name="uid">用户id（由数字、字母、下划线组成），长度限制128B</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="T:Baidu.Aip.ImageCensor.AntiPorn">
            <summary>
                黄反相关
            </summary>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.AntiPorn.Detect(System.Byte[])">
            <summary>
                黄反识别
            </summary>
            <param name="image">图像字节数组</param>
            <returns>识别结果</returns>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.AntiPorn.DetectGif(System.Byte[])">
            <summary>
                GIF色情图像识别
            </summary>
            <param name="image">图像字节数组</param>
            <returns>识别结果</returns>
        </member>
        <member name="T:Baidu.Aip.ImageCensor.AntiTerror">
            <summary>
                暴恐
            </summary>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.AntiTerror.Detect(System.Byte[])">
            <summary>
                暴恐识别
            </summary>
            <param name="image">图像字节数组</param>
            <returns></returns>
        </member>
        <member name="T:Baidu.Aip.ImageCensor.ImageCensor">
            <summary>
            图像审核
            </summary>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.ImageCensor.UserDefined(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            图像审核接口
            为用户提供色情识别、暴恐识别、政治敏感人物识别、广告识别、图像垃圾文本识别（反作弊）、恶心图像识别等一系列图像识别接口的一站式服务调用，
            并且支持用户在控制台中自定义配置所有接口的报警阈值和疑似区间，上传自定义文本黑库和敏感人物名单等。
            相比于组合服务接口，本接口除了支持自定义配置外，还对返回结果进行了总体的包装，按照用户在控制台中配置的规则直接返回是否合规，如果不合规则指出具体不合规的内容。
            </summary>
            <param name="image"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.ImageCensor.UserDefinedUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            图像审核接口
            为用户提供色情识别、暴恐识别、政治敏感人物识别、广告识别、图像垃圾文本识别（反作弊）、恶心图像识别等一系列图像识别接口的一站式服务调用，
            并且支持用户在控制台中自定义配置所有接口的报警阈值和疑似区间，上传自定义文本黑库和敏感人物名单等。
            相比于组合服务接口，本接口除了支持自定义配置外，还对返回结果进行了总体的包装，按照用户在控制台中配置的规则直接返回是否合规，如果不合规则指出具体不合规的内容。
            </summary>
            <param name="imageUrl"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Baidu.Aip.ImageCensor.Solution">
            <summary>
                图像审核解决方案
            </summary>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.Solution.Combo(System.String,System.String[],System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                图像审核组合接口
            </summary>
            <param name="imageUrl">图片URL</param>
            <param name="scenes">需要调用的服务</param>
            <param name="options">
                服务参数。
                key为服务类型，value为json string或dictionary
            </param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.Solution.Combo(System.Byte[],System.String[],System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                图像审核组合接口
            </summary>
            <param name="image">图像原始字节数据</param>
            <param name="scenes">调用的服务列表</param>
            <param name="options">额外参数</param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.Solution.FaceAudit(System.Byte[][],System.Nullable{System.Int64})">
            <summary>
                头像审核
            </summary>
            <param name="images"></param>
            <param name="configId"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.ImageCensor.Solution.FaceAudit(System.String[],System.Nullable{System.Int64})">
            <summary>
                头像审核
            </summary>
            <param name="images"></param>
            <param name="configId"></param>
            <returns></returns>
        </member>
        <member name="T:Baidu.Aip.ImageClassify.ImageClassify">
            <summary>
            图像识别
            </summary>
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.DishDetect(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             菜品识别接口
             该请求用于菜品识别。即对于输入的一张图片（可正常解码，且长宽比适宜），输出图片的菜品名称、卡路里信息、置信度。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>top_num</c>: 返回预测得分top结果数，默认为5 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.CarDetect(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             车辆识别接口
             该请求用于检测一张车辆图片的具体车型。即对于输入的一张图片（可正常解码，且长宽比适宜），输出图片的车辆品牌及型号。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>top_num</c>: 返回预测得分top结果数，默认为5 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.LogoSearch(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             logo商标识别接口
             该请求用于检测和识别图片中的品牌LOGO信息。即对于输入的一张图片（可正常解码，且长宽比适宜），输出图片中LOGO的名称、位置和置信度。 当效果欠佳时，可以建立子库（请加入QQ群：649285136 联系工作人员申请建库）并自定义logo入库，提高识别效果。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>custom_lib</c>: 是否只使用自定义logo库的结果，默认false：返回自定义库+默认库的识别结果 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.LogoAdd(System.Byte[],System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             logo商标识别—添加接口
             该接口尚在邀测阶段，使用该接口之前需要线下联系工作人员完成建库方可使用，请加入QQ群：649285136 联系相关人员。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="brief">brief，检索时带回。此处要传对应的name与code字段，name长度小于100B，code长度小于150B</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.LogoDeleteByImage(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             logo商标识别—删除接口
             该接口尚在邀测阶段，使用该接口之前需要线下联系工作人员完成建库方可使用，请加入QQ群：649285136 联系相关人员。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.LogoDeleteBySign(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             logo商标识别—删除接口
             该接口尚在邀测阶段，使用该接口之前需要线下联系工作人员完成建库方可使用，请加入QQ群：649285136 联系相关人员。
             </summary>
             <param name="contSign">图片签名（和image二选一，image优先级更高）</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.AnimalDetect(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             动物识别接口
             该请求用于识别一张图片。即对于输入的一张图片（可正常解码，且长宽比适宜），输出动物识别结果
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>top_num</c>: 返回预测得分top结果数，默认为6 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.PlantDetect(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             植物识别接口
             该请求用于识别一张图片。即对于输入的一张图片（可正常解码，且长宽比适宜），输出植物识别结果。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageClassify.ImageClassify.ObjectDetect(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             图像主体检测接口
             用户向服务请求检测图像中的主体位置。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>with_face</c>: 如果检测主体是人，主体区域是否带上人脸部分，0-不带人脸区域，其他-带人脸区域，裁剪类需求推荐带人脸，检索/识别类需求推荐不带人脸。默认取1，带人脸。 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="T:Baidu.Aip.ImageSearch.ImageSearch">
            <summary>
            图像搜索
            </summary>
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SameHqAdd(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相同图检索—入库接口
             该请求用于实时检索相同图片集合。即对于输入的一张图片（可正常解码，且长宽比适宜），返回自建图库中相同的图片集合。相同图检索包含入库、检索、删除三个子接口；**在正式使用之前请加入QQ群：649285136 联系工作人员完成建库并调用入库接口完成图片入库**。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>brief</c>: 检索时原样带回,最长256B。 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SameHqSearch(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相同图检索—检索接口
             使用该接口前，请加入QQ群：649285136 ，联系工作人员完成建库。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SameHqDeleteByImage(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相同图检索—删除接口
             删除相同图
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SameHqDeleteBySign(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相同图检索—删除接口
             删除相同图
             </summary>
             <param name="contSign">图片签名（和image二选一，image优先级更高）</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SimilarAdd(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相似图检索—入库接口
             该请求用于实时检索相似图片集合。即对于输入的一张图片（可正常解码，且长宽比适宜），返回自建图库中相似的图片集合。相似图检索包含入库、检索、删除三个子接口；**在正式使用之前请加入QQ群：649285136 联系工作人员完成建库并调用入库接口完成图片入库**。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>brief</c>: 检索时原样带回,最长256B。 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SimilarSearch(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相似图检索—检索接口
             使用该接口前，请加入QQ群：649285136 ，联系工作人员完成建库。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SimilarDeleteByImage(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相似图检索—删除接口
             删除相似图
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.SimilarDeleteBySign(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             相似图检索—删除接口
             删除相似图
             </summary>
             <param name="contSign">图片签名（和image二选一，image优先级更高）</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.ProductAdd(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             商品检索—入库接口
             该请求用于实时检索商品类型图片相同或相似的图片集合，适用于电商平台或商品展示等场景，即对于输入的一张图片（可正常解码，且长宽比适宜），返回自建商品库中相同或相似的图片集合。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>brief</c>: 检索时原样带回,最长256B。**请注意，检索接口不返回原图，仅反馈当前填写的brief信息，所以调用该入库接口时，brief信息请尽量填写可关联至本地图库的图片id或者图片url、图片名称等信息** </item>
                       <item>  <c>class_id1</c>: 商品分类维度1，支持1-60范围内的整数。检索时可圈定该分类维度进行检索 </item>
                       <item>  <c>class_id2</c>: 商品分类维度1，支持1-60范围内的整数。检索时可圈定该分类维度进行检索 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.ProductSearch(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             商品检索—检索接口
             完成入库后，可使用该接口实现商品检索。**请注意，检索接口不返回原图，仅反馈当前填写的brief信息，请调用入库接口时尽量填写可关联至本地图库的图片id或者图片url等信息**
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>class_id1</c>: 商品分类维度1，支持1-60范围内的整数。检索时可圈定该分类维度进行检索 </item>
                       <item>  <c>class_id2</c>: 商品分类维度1，支持1-60范围内的整数。检索时可圈定该分类维度进行检索 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.ProductDeleteByImage(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             商品检索—删除接口
             删除商品
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.ImageSearch.ImageSearch.ProductDeleteBySign(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             商品检索—删除接口
             删除商品
             </summary>
             <param name="contSign">图片签名（和image二选一，image优先级更高）</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="T:Baidu.Aip.Kg.Pie">
            <summary>
            知识图谱
            </summary>
        </member>
        <member name="M:Baidu.Aip.Kg.Pie.CreateTask(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             创建任务接口
             创建一个新的信息抽取任务
             </summary>
             <param name="name">任务名字</param>
             <param name="templateContent">json string 解析模板内容</param>
             <param name="inputMappingFile">抓取结果映射文件的路径</param>
             <param name="outputFile">输出文件名字</param>
             <param name="urlPattern">url pattern</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>limit_count</c>: 限制解析数量limit_count为0时进行全量任务，limit_count>0时只解析limit_count数量的页面 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Kg.Pie.UpdateTask(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             更新任务接口
             更新任务配置，在任务重新启动后生效
             </summary>
             <param name="id">任务ID</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>name</c>: 任务名字 </item>
                       <item>  <c>template_content</c>: json string 解析模板内容 </item>
                       <item>  <c>input_mapping_file</c>: 抓取结果映射文件的路径 </item>
                       <item>  <c>url_pattern</c>: url pattern </item>
                       <item>  <c>output_file</c>: 输出文件名字 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Kg.Pie.TaskInfo(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             获取任务详情接口
             根据任务id获取单个任务的详细信息
             </summary>
             <param name="id">任务ID</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Kg.Pie.TaskQuery(System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             以分页的方式查询当前用户所有的任务信息接口
             该请求用于菜品识别。即对于输入的一张图片（可正常解码，且长宽比适宜），输出图片的菜品名称、卡路里信息、置信度。
             </summary>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>id</c>: 任务ID，精确匹配 </item>
                       <item>  <c>name</c>: 中缀模糊匹配,abc可以匹配abc,aaabc,abcde等 </item>
                       <item>  <c>status</c>: 要筛选的任务状态 </item>
                       <item>  <c>page</c>: 页码 </item>
                       <item>  <c>per_page</c>: 页码 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Kg.Pie.TaskStart(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             启动任务接口
             启动一个已经创建的信息抽取任务
             </summary>
             <param name="id">任务ID</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Kg.Pie.TaskStatus(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             查询任务状态接口
             查询指定的任务的最新执行状态
             </summary>
             <param name="id">任务ID</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="T:Baidu.Aip.Nlp.Nlp">
            <summary>
            自然语言处理
            </summary>
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.Lexer(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             词法分析接口
             词法分析接口向用户提供分词、词性标注、专名识别三大功能；能够识别出文本串中的基本词汇（分词），对这些词汇进行重组、标注组合后词汇的词性，并进一步识别出命名实体。
             </summary>
             <param name="text">待分析文本（目前仅支持GBK编码），长度不超过65536字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.LexerCustom(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             词法分析（定制版）接口
             词法分析接口向用户提供分词、词性标注、专名识别三大功能；能够识别出文本串中的基本词汇（分词），对这些词汇进行重组、标注组合后词汇的词性，并进一步识别出命名实体。
             </summary>
             <param name="text">待分析文本（目前仅支持GBK编码），长度不超过65536字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.DepParser(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             依存句法分析接口
             依存句法分析接口可自动分析文本中的依存句法结构信息，利用句子中词与词之间的依存关系来表示词语的句法结构信息（如“主谓”、“动宾”、“定中”等结构关系），并用树状结构来表示整句的结构（如“主谓宾”、“定状补”等）。
             </summary>
             <param name="text">待分析文本（目前仅支持GBK编码），长度不超过256字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>mode</c>: 模型选择。默认值为0，可选值mode=0（对应web模型）；mode=1（对应query模型） </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.WordEmbedding(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             词向量表示接口
             词向量表示接口提供中文词向量的查询功能。
             </summary>
             <param name="word">文本内容（GBK编码），最大64字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.DnnlmCn(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             DNN语言模型接口
             中文DNN语言模型接口用于输出切词结果并给出每个词在句子中的概率值,判断一句话是否符合语言表达习惯。
             </summary>
             <param name="text">文本内容（GBK编码），最大512字节，不需要切词</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.WordSimEmbedding(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             词义相似度接口
             输入两个词，得到两个词的相似度结果。
             </summary>
             <param name="word1">词1（GBK编码），最大64字节</param>
             <param name="word2">词1（GBK编码），最大64字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>mode</c>: 预留字段，可选择不同的词义相似度模型。默认值为0，目前仅支持mode=0 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.Simnet(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             短文本相似度接口
             短文本相似度接口用来判断两个文本的相似度得分。
             </summary>
             <param name="text1">待比较文本1（GBK编码），最大512字节</param>
             <param name="text2">待比较文本2（GBK编码），最大512字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>model</c>: 默认为"BOW"，可选"BOW"、"CNN"与"GRNN" </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.CommentTag(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             评论观点抽取接口
             评论观点抽取接口用来提取一条评论句子的关注点和评论观点，并输出评论观点标签及评论观点极性。
             </summary>
             <param name="text">评论内容（GBK编码），最大10240字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>type</c>: 评论行业类型，默认为4（餐饮美食） </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Nlp.Nlp.SentimentClassify(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             情感倾向分析接口
             对包含主观观点信息的文本进行情感极性类别（积极、消极、中性）的判断，并给出相应的置信度。
             </summary>
             <param name="text">文本内容（GBK编码），最大102400字节</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="T:Baidu.Aip.Ocr.Ocr">
            <summary>
            通用文字识别
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.GeneralBasic(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.GeneralBasicUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.AccurateBasic(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.General(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.GeneralUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.Accurate(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.GeneralEnhanced(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.GeneralEnhancedUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.WebImage(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.WebImageUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.Idcard(System.Byte[],System.String,System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <member name="M:Baidu.Aip.Ocr.Ocr.Bankcard(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             银行卡识别接口
             识别银行卡并返回卡号和发卡行。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.DrivingLicense(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.VehicleLicense(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <member name="M:Baidu.Aip.Ocr.Ocr.LicensePlate(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             车牌识别接口
             识别机动车车牌，并返回签发地和号牌。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>multi_detect</c>: 是否检测多张车牌，默认为false，当置为true的时候可以对一张图片内的多张车牌进行识别 </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Ocr.Ocr.BusinessLicense(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             营业执照识别接口
             识别营业执照，并返回关键字段的值，包括单位名称、法人、地址、有效期、证件编号、社会信用代码等。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <!-- Badly formed XML comment ignored for member "M:Baidu.Aip.Ocr.Ocr.Receipt(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <member name="M:Baidu.Aip.Ocr.Ocr.TableRecognitionRequest(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             表格文字识别接口
             自动识别表格线及表格内容，结构化输出表头、表尾及每个单元格的文字内容。表格文字识别接口为异步接口，分为两个API：提交请求接口、获取结果接口。
             </summary>
             <param name="image">二进制图像数据</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Ocr.Ocr.TableRecognitionGetResult(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
             <summary>
             表格识别结果接口
             获取表格文字识别结果
             </summary>
             <param name="requestId">发送表格文字识别请求时返回的request id</param>
             <param name="options"> 可选参数对象，key: value都为string类型，可选的参数包括
                 <list type="bullet">
                       <item>  <c>result_type</c>: 期望获取结果的类型，取值为“excel”时返回xls文件的地址，取值为“json”时返回json格式的字符串,默认为”excel” </item>
                 </list>
             </param>
             <return>JObject</return>
            
        </member>
        <member name="M:Baidu.Aip.Ocr.Ocr.TableRecognition(System.Byte[],System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                识别表格（同步接口）
            </summary>
            <param name="image"></param>
            <param name="timeoutMiliseconds"></param>
            <param name="options">请求识别时的可选参数</param>
            <returns></returns>
            <exception cref="T:Baidu.Aip.AipException"></exception>
        </member>
        <member name="M:Baidu.Aip.Ocr.Ocr.TableRecognitionToJson(System.Byte[],System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                识别为Json结果返回。 会在后台自动刷新结果，直至返回结果或超时
            </summary>
            <param name="image"></param>
            <param name="timeoutMiliseconds">超时时间</param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Ocr.Ocr.TableRecognitionToExcel(System.Byte[],System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                识别为Excel结果返回。 会在后台自动刷新结果，直至返回结果或超时
            </summary>
            <param name="image"></param>
            <param name="timeoutMiliseconds"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Baidu.Aip.Speech.Asr">
            <summary>
                语音识别相关接口
            </summary>
        </member>
        <member name="M:Baidu.Aip.Speech.Asr.Recognize(System.Byte[],System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                识别语音数据
            </summary>
            <param name="data"></param>
            <param name="format"></param>
            <param name="rate"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Baidu.Aip.Speech.Asr.Recoginze(System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                识别URL
            </summary>
            <param name="url"></param>
            <param name="callback"></param>
            <param name="format"></param>
            <param name="rate"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Baidu.Aip.Speech.TtsResponse">
            <summary>
                语音合成结果
            </summary>
        </member>
        <member name="P:Baidu.Aip.Speech.TtsResponse.Data">
            <summary>
                语音数据内容
            </summary>
        </member>
        <member name="T:Baidu.Aip.Speech.Tts">
            <summary>
                语音合成相关接口
            </summary>
        </member>
        <member name="M:Baidu.Aip.Speech.Tts.Synthesis(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                语音合成
            </summary>
            <param name="text">需要合成的内容</param>
            <param name="options"></param>
            <returns></returns>
        </member>
    </members>
</doc>
